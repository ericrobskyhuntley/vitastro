---
import type { CollectionEntry, ReferenceDataEntry } from "astro:content";
import { getEntry, getEntries, getCollection } from "astro:content";

import Section from './Section.astro';
import ThesisAdvised from './ThesisAdvised.astro';

type Vita = CollectionEntry<"vita">
type Person = CollectionEntry<"people">
type Theses = CollectionEntry<"theses">

interface Props {
    vita: Vita;
    heading: string;
}

const { vita, heading } = Astro.props;

const person: Person = await getEntry(vita.data.person);

const asAdvisor: Theses[] = await getCollection('theses', ({ data }) => {
  return data.chair.id == person.id
});

const asCommittee: Theses[] = await getCollection('theses', ({ data }) => {
  return data.committee ? data.committee.some(member => member.id === person.id) : null;
});

---
<Section name={heading} classes="is-size-5 has-text-weight-bold">
    {
        asAdvisor.map((thesis) => <ThesisAdvised {thesis}/>)
    }
    {
        asCommittee.map((thesis) => <ThesisAdvised {thesis}/>)
    }
</Section>